@import "normalize.css";
@import "variables.scss";
@import "mixins.scss";

*{
  font-family: $font-family;
  box-sizing: border-box;
}

button {
  /* Сброс стандартных стилей */
  padding: $button-padding;
  border-radius: $button-border-radius;
  font-size: $button-font-size;
  border: none;
  cursor: pointer;
  background-color: $primary-color;
  color: white;
}

body {
  height: 100vh;
  background-color: white;
  color: black;
}

// Цикл для разделения значений светлой и темной темы

@each $theme, $values in $themes {
  body[data-theme='#{$theme}'] {
    background-color: map-get($values, background-color-primary);
    color: map-get($values, text-primary-color);
    transition: all 0.3s ease;
  }

  body[data-theme='#{$theme}'] button {
    background-color: map-get($values, accent-color);
    color: map-get($values, text-primary-color);
    transition: all 0.3s ease;
  }

  body[data-theme='#{$theme}'] .edit-form {
    background-color: map-get($values, background-color-secondary);
    border: 1px solid map-get($values, accent-color);
    transition: all 0.3s ease;
  }


  body[data-theme='#{$theme}'] button:disabled {
    background-color: map-get($values, accent-color);;
    color: $disabled-color;
    cursor: not-allowed;
    transition: all 0.3s ease;
  }

  body[data-theme='#{$theme}'] div.modal-content {
    background-color: map-get($values, background-color-secondary);
    color: map-get($values, text-primary-color);
    border-radius: $button-border-radius;
    border: none;
    transition: all 0.3s ease;
  }

  //Чекбоксы приложения
  body[data-theme='#{$theme}'] .checkmark:after {
    background-color: map-get($values, background-color-secondary);
    transition: all 0.3s ease;
  }

  body[data-theme='#{$theme}'] .checkmark {
    background-color: map-get($values, background-color-secondary);
    transition: all 0.3s ease;
  }

  body[data-theme='#{$theme}'] :hover input ~ .checkmark {
    background-color: map-get($values, accent-color);
    transition: all 0.3s ease;
  }

  body[data-theme='#{$theme}'] .task-item {
    background-color: map-get($values, background-color-secondary);
    border: 1px solid map-get($values, accent-color);
  }
}

//Инпуты

input[type="text"] {
  width: fit-content;
  padding: 12px 20px;
  box-sizing: border-box;
  border: 2px solid #ccc;
  border-radius: 4px;
  transition: all 0.3s ease;
}

/* Изменение стиля инпута при наведении */
input[type="text"]:hover {
  border: 2px solid #555;
  transition: all 0.3s ease;
}

/* Изменение стиля инпута при фокусе */
input[type="text"]:focus {
  border: 2px solid #555;
  outline: none;
  transition: all 0.3s ease;
}

//Кнопка в состоянии disabled

button:disabled,button[disabled] {
  background-color: #cccccc ;
  color: #666666 ;
  cursor: not-allowed;
  transition: all 0.3s ease;
}

ul,
ol {
  list-style: none;
  padding: 0;
}

h3 {
  margin: 0;
}

//Чекбоксы

.checkbox-container {
  display: flex;
  width: 25px;
  height: 25px;
  padding-left: 0;
}

span.checkmark {
  display: flex;
  position: relative;
}

//Кнопки подвердить и закрыть

.button-true:hover {
  color: white;
  background-color: $primary-color;
  transition: all 0.3s ease;
}

.button-false:hover {
  color: white;
  background-color: $warning-color;
  transition: all 0.3s ease;
}

