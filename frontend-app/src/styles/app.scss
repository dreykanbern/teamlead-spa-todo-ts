@import "normalize.css";
@import "variables.scss";
@import "mixins.scss";

*{
  font-family: $font-family;
}

button {
  /* Сброс стандартных стилей */
  padding: $button-padding;
  border-radius: $button-border-radius;
  font-size: $button-font-size;
  border: none;
  cursor: pointer;
  background-color: $primary-color;
  color: white;
}

body {
  height: 100vh;
  background-color: white;
  color: black;
}

// Цикл для разделения значений светлой и темной темы

@each $theme, $values in $themes {
  body[data-theme='#{$theme}'] {
    background-color: map-get($values, background-color-primary);
    color: map-get($values, text-primary-color);
    transition: all 0.3s ease;
  }

  body[data-theme='#{$theme}'] button {
    background-color: map-get($values, accent-color);
    color: map-get($values, text-primary-color);
    transition: all 0.3s ease;
  }
  body[data-theme='#{$theme}'] div.modal-content {
    background-color: map-get($values, background-color-secondary);
    color: map-get($values, text-primary-color);
    border-radius: $button-border-radius;
    border: none;
    transition: all 0.3s ease;
  }

  //Чекбоксы приложения
  body[data-theme='#{$theme}'] .checkmark:after {
    background-color: map-get($values, background-color-secondary);
    transition: all 0.3s ease;
  }

  body[data-theme='#{$theme}'] .checkmark {
    background-color: map-get($values, background-color-secondary);
    transition: all 0.3s ease;
  }

  body[data-theme='#{$theme}'] :hover input ~ .checkmark {
    background-color: map-get($values, accent-color);
    transition: all 0.3s ease;
  }
}
